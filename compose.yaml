services:
  # --- PostgreSQL ---
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    ports: ["5432:5432"]
    volumes: ["./postgres-data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mlflowdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  # --- MinIO (S3-compatible) ---
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "timeout 5s bash -lc ':> /dev/tcp/127.0.0.1/9000' || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 20
    profiles: ["dev"]

  # Create bucket if missing
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -lc "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      mc ls minio/mlops-fraud-dvc || mc mb minio/mlops-fraud-dvc
      "
    profiles: ["dev"]

  # --- MLflow Tracking Server ---
  mlflow:
    build:
      context: .
      dockerfile_inline: |
        FROM ghcr.io/mlflow/mlflow:v3.1.4
        RUN pip install --no-cache-dir psycopg2-binary==2.9.9 boto3==1.34.162
    container_name: mlflow-server
    depends_on:
      postgres:
        condition: service_healthy
      # minio:
      #   condition: service_healthy
      # minio-create-bucket:
      #   condition: service_completed_successfully
    ports:
      - "5500:5000"   # host:container
    environment:
      # MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      # MLFLOW_ENABLE_SYSTEM_METRICS: "true"
    command: >
      mlflow server
        --host 0.0.0.0 --port 5000
        --backend-store-uri postgresql+psycopg2://user:password@postgres:5432/mlflowdb
        --artifacts-destination ${ARTIFACTS_URI}
        --serve-artifacts
