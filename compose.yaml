version: "3.9"

services:
  # --- PostgreSQL ---
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    ports: ["5432:5432"]
    volumes: ["./postgres-data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mlflowdb"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # --- MinIO (S3-compatible, optional) ---
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "timeout 5s bash -lc ':> /dev/tcp/127.0.0.1/9000' || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 20
    profiles: ["dev"]
    restart: unless-stopped

  # Create bucket if missing (dev only)
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -lc "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      mc ls minio/mlops-fraud-dvc || mc mb minio/mlops-fraud-dvc
      "
    profiles: ["dev"]
    restart: "no"

  # --- MLflow Tracking Server ---
  mlflow:
    build:
      context: .
      dockerfile_inline: |
        FROM ghcr.io/mlflow/mlflow:v3.1.4
        RUN pip install --no-cache-dir psycopg2-binary==2.9.9 boto3==1.34.162
    container_name: mlflow-server
    depends_on:
      postgres:
        condition: service_healthy
      # For MinIO dev profile, also depend on these:
      # minio:
      #   condition: service_healthy
      # minio-create-bucket:
      #   condition: service_completed_successfully
    ports:
      - "5500:5000"   # host:container
    env_file: [.env]
    environment:
      # For AWS S3 (recommended): leave endpoint UNSET.
      # For MinIO dev: uncomment next line in your .env or here
      # MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_REGION: ${AWS_REGION}
      ARTIFACTS_URI: ${ARTIFACTS_URI}        # e.g. s3://mlops-fraud-dvc  (no trailing slash)
    command: >
      mlflow server
        --host 0.0.0.0 --port 5000
        --backend-store-uri postgresql+psycopg2://user:password@postgres:5432/mlflowdb
        --artifacts-destination ${ARTIFACTS_URI}
        --serve-artifacts
    healthcheck:
      test: ["CMD-SHELL","bash -lc \":> /dev/tcp/127.0.0.1/5000\""]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  # --- FastAPI Inference API ---
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      mlflow:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: [.env]
    environment:
      # Internal MLflow URL (not host port 5500)
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MODEL_NAME: ${MODEL_NAME:-fraud_xgb}
      MODEL_ALIAS: ${MODEL_ALIAS:-staging}
      MODEL_REFRESH_SECS: ${MODEL_REFRESH_SECS:-120}
      ARTIFACTS_URI: ${ARTIFACTS_URI}        # used by direct-S3 loader in api.py
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_REGION: ${AWS_REGION}
      SKIP_REGISTRY_RESOLVER: "1"          # always go direct to S3
      MLFLOW_HTTP_REQUEST_TIMEOUT: "5"     # keep small anyway
      MODEL_READY_TIMEOUT_SECS: "8"
    restart: unless-stopped
    # mount optional debug scripts (comment out if not needed)
    volumes:
      - ./scripts:/app/scripts:ro
